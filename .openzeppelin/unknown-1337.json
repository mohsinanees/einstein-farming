{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xBB445aE1b84BE3aaB88A8193116847b528436fFB",
    "txHash": "0x9bd805dfc91b052541cdc0c5e5cd2f514312c3cb8c47cd5356bc02a7efbbd2f2"
  },
  "proxies": [
    {
      "address": "0x10b27140b2160b067C6d8C59c27f7659592Bb4F2",
      "txHash": "0x02b1b50d9fa8cc1890d810f72d04245a6ebebfdae10f07574e874495dd0725a4",
      "kind": "transparent"
    },
    {
      "address": "0xC60819140Fc6498272774585E769A9D6E102E597",
      "txHash": "0xe7a95528c667ead7c4873272bc0697035f8c40502a5bc07f763a4620bb07b9a4",
      "kind": "transparent"
    },
    {
      "address": "0x62D2120EA5D26A9921d15F562e582beEF6653dB8",
      "txHash": "0x059c92730ad34765ea4b22db1eb700f6eea8e68bbc288696d7485ebbe5879c92",
      "kind": "transparent"
    },
    {
      "address": "0xf6db2846a00F8d7963E00F5F66DB404190a7094e",
      "txHash": "0xaa3164e62c1fb95b5131a32df64f02e5e23c7e70bf905d2e11d3056796364127",
      "kind": "transparent"
    },
    {
      "address": "0x562d83D6E0814cFD8c07A7ADB030aBcA3AE3e453",
      "txHash": "0xfd24f5cd67d1f95a060bd5b9bef96ce72922e7ab8acae410b76b4091250d39eb",
      "kind": "transparent"
    },
    {
      "address": "0x446F1C66c602AFaA137639b9477b31F13Ad507aA",
      "txHash": "0x2ef4220513c919549f153b2fe0388c6a9b1924c8d3aa7a00dbf8a7bf42793281",
      "kind": "transparent"
    },
    {
      "address": "0xDbB055125bCE615826C1D21936E294B5310168F4",
      "txHash": "0x77b259ae19672c78ba932cf4003b2de73104ce118aef8b35809d2d69cfc9ab4a",
      "kind": "transparent"
    },
    {
      "address": "0xbF775198AC2516Fa898C038dd19735421Af0A90D",
      "txHash": "0x0ef034021b5682a5e53a63890d7bdf4d4bada2dc5df5da49efa085603670a8be",
      "kind": "transparent"
    },
    {
      "address": "0x6ce0B23035f4dDCA04A8fb0a87E4CA331788DcDB",
      "txHash": "0x27161d339c9199e229b9f500b0918c999a8998c375bbdf853c06befb1507a28a",
      "kind": "transparent"
    },
    {
      "address": "0x5e18c963f4eE6c17b9808e3AFCEcd08141a13626",
      "txHash": "0x51e8d7bfd363216246a82980d23378c81ab22bc2bb9536b930da3482b60360ff",
      "kind": "transparent"
    },
    {
      "address": "0xaadF93FC12ec4E9fb7ac3EA7c888DfE3EF9b3e5e",
      "txHash": "0x03d80a802087a19742fdec007ecbc650a7a4a6555e66aa1fb2242602e464379e",
      "kind": "transparent"
    },
    {
      "address": "0x7936EF02bcDa1e0D4dc6bfEAE6c12af85acB9622",
      "txHash": "0x591b6e93eb9e2a29e7eb2c8cfb60de101fdb518f56e7559736cacb9c68f1d65e",
      "kind": "transparent"
    },
    {
      "address": "0x85e4B01EE9A088179B31d2F9a6Be2dfE6BF258d6",
      "txHash": "0x80a124005e13452c3b2a5ac6fdf92085f37dc8279d5fb637d7edb7759fb55fdc",
      "kind": "transparent"
    },
    {
      "address": "0x627C13D0111a6c6c3937378Ae3FA92c99f43CCBc",
      "txHash": "0x48c3810db20315c24a248761e12f216228fa1f232ac77859a98cfaaada4685d9",
      "kind": "transparent"
    },
    {
      "address": "0x7F31CF076cA6aD0093B5403a1c9633eec0D00905",
      "txHash": "0x1dddd76d63c3a93c232a1cfeb7b7b254567809016d2acb1d1ff961f92f2a51a8",
      "kind": "transparent"
    },
    {
      "address": "0x0016723678e30b4b0990f2B6aA9d78Fa02f042b8",
      "txHash": "0x1c8af0ac1be421f77c997c3b5f73c6902d3cd7739e48ff10bb0c3c48784d71a8",
      "kind": "transparent"
    },
    {
      "address": "0xe7b008a8F8538a2004b4A3C707BCEAE9Cb283fc5",
      "txHash": "0xc780cde969988ea3af1e3dc94a701e4b83cd932d16efb71443eb7baefd8a0919",
      "kind": "transparent"
    },
    {
      "address": "0xE7A227675e3476f1b915a625Ff7526F4ee906e6e",
      "txHash": "0xa156194e30d5bd8bf2680f6395f069254e00afdfc1bf543d4e25294e062e7139",
      "kind": "transparent"
    },
    {
      "address": "0x948d7964E172621c7623650E378AD020cc04FAf9",
      "txHash": "0xb28b4c9acfff759ab8427dcd41da88822cd98213037f6ad71b43b696b632b583",
      "kind": "transparent"
    },
    {
      "address": "0x3aCAf48f9493C4f328190F9959a9ae71492c7Cf0",
      "txHash": "0x172e68973f0056c610298f64d74dac8804ba172f44478181366bb18eb0b400ac",
      "kind": "transparent"
    },
    {
      "address": "0x26880E8A7ac7b32A77499C467AF1BFFdFE25C5e7",
      "txHash": "0xd56164dec17cb091faf04260e14e330a34e6590bf67f4dde6415dcb9108b7cef",
      "kind": "transparent"
    },
    {
      "address": "0x8feD00174b23b381C0590F28AaC35fE1711E35d8",
      "txHash": "0x4c232e1d39c0238b9d707e777a9e9defb972570679e1422d30d61178041ad77e",
      "kind": "transparent"
    },
    {
      "address": "0xB8154Bd9aDB32b670C66948Ebed3323873c38880",
      "txHash": "0xc62cbfa0aedfdf75774793ebc4fb911683d89eabefc0a44cae298d9734b71e62",
      "kind": "transparent"
    },
    {
      "address": "0x06b437E979871E5f45F0B19Cc6c3ba011a17632a",
      "txHash": "0x17c735a4dde9b8f659fa0c2b09dcb0b7d2a82d1b92df3aaad6e3d856027daf0b",
      "kind": "transparent"
    },
    {
      "address": "0xe7703A7935Ac5806ef3F01a6a75A6906ac802B83",
      "txHash": "0x8a948bab6d4886073f8a20405b8853af726dfc0827f170e5bb5ff7604314584c",
      "kind": "transparent"
    },
    {
      "address": "0x5fD4888DaE755EEABDC333eDA96EdaC83790C73F",
      "txHash": "0x48a41e6a813a6a9e2080f208626c45078a7819716ee9d372100e5f1341975ea5",
      "kind": "transparent"
    },
    {
      "address": "0xB823E59dfaC2650Ca2B6d71F7ef2DB4298493d28",
      "txHash": "0xfec40aa471c784474b77565116e6e2edb9789d2de93bcce4fc98f490d8c275ba",
      "kind": "transparent"
    },
    {
      "address": "0x7fA7277D64658403EfE55F70c9D0fcB44F705a15",
      "txHash": "0x17b4ce92d98181eaafb68310fa23bbcd570ccfa4b900011a1952964f0109b3a7",
      "kind": "transparent"
    },
    {
      "address": "0x899E4Db21ee83015d276d8aA1015bD79B82456B9",
      "txHash": "0x3d10fa3619fc63c9062bade0e5cc34deed06a9df7eb8428ba1c9d0bc900a46f0",
      "kind": "transparent"
    },
    {
      "address": "0xCEDA5A5517D9b7B74e97fEB4Cf097c873eB198e6",
      "txHash": "0xcaba24a68627b32430b4178153bb2033d9c60b42ed5605f59a9fce57d180409d",
      "kind": "transparent"
    },
    {
      "address": "0xDa8e872B72FEC780B67d9a5f3CaA857C96e357f3",
      "txHash": "0x9ac4e9d601885a8852ca80fc03689945a6837b512b76c0b7e702d54471392a36",
      "kind": "transparent"
    },
    {
      "address": "0x83bd16ceFE65511dAFAaA3580522fb77a04027e9",
      "txHash": "0x6cae1ab06a0d8d22dc47523384e0239e0b6df630d7a702d5421d873534784f3d",
      "kind": "transparent"
    },
    {
      "address": "0x5d7deC1eD0aD4ACE897AcDa8d38395835bf8C44F",
      "txHash": "0xfc9a107002d77925aedb40c1dc11148f6dec93bca20dd96e221751f7a11e497e",
      "kind": "transparent"
    },
    {
      "address": "0xA250A66C11873Ed09185c0Af784A536c2e1334A3",
      "txHash": "0x58e28a33ca5410821df361dc0325e5ec25c14368c03a13f3231bc4ab64b24348",
      "kind": "transparent"
    },
    {
      "address": "0xE329E361C5d785a2387B7bF227D8700cBBdB6557",
      "txHash": "0x1eb9ac5f6afe5903524ba6ea256b0988b02692f8a4ed75a3610603e6e6514dab",
      "kind": "transparent"
    },
    {
      "address": "0x71877e4A43fEd70AeE2ac380BA32fb3bB0B42Aee",
      "txHash": "0x722c563f2dfce6e6d21ea7be241a434a28613ca4996e7c40fe1a175c213b021d",
      "kind": "transparent"
    },
    {
      "address": "0x7a48c7195bE4CD2e66107E789c3576C000283E90",
      "txHash": "0x1bb1a296c7c5bb2e2973a7c5953da7a48f1a2d7c5050fa894444ffb38d8a174b",
      "kind": "transparent"
    },
    {
      "address": "0xD6DD715b5EaA3fB7908D7ce424DdBeD1543E8623",
      "txHash": "0x8041c45790568d337bda7a81fdc22d5fce7b509f210f745766760a164a3c693c",
      "kind": "transparent"
    },
    {
      "address": "0xF8Cb120eA0407Dc4D3c6eF02767752fCB90ef369",
      "txHash": "0xda48acee04aad170bd96d545a905e87e3782446ced19c87859e073b593e0a671",
      "kind": "transparent"
    }
  ],
  "impls": {
    "33aeb03245c588848bcbdb7d883d78fa65f92b07c8f0083743f565d266794f74": {
      "address": "0x76F0E6908A3fa963e8B1A19aff3BA1c272663F75",
      "txHash": "0xea41baa95d8519f5afe7079d91142f1cdd6ba24279f8d9489c1d287b9ff1f32b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)1130,t_struct(PoolInfo)1158_storage)",
            "src": "../project:/contracts/EinsteinFarming.sol:49"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage))",
            "src": "../project:/contracts/EinsteinFarming.sol:51"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../project:/contracts/EinsteinFarming.sol:52"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_uint256))",
            "src": "../project:/contracts/EinsteinFarming.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)1130,t_struct(PoolInfo)1158_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)1130": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)1158_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)1130"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)1130"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)1169_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)1130,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71259a552fc2c9d9186e5b8336af3c61c3b1893e0c5d355d18e86ca8bc4e8bf2": {
      "address": "0x182D24864e58F665c038E6430e477c1478a578Af",
      "txHash": "0xbb0d71a4977cc5d5632875609d443e26f0820a1f8094b7bf1605a232cfa02f46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)1130,t_struct(PoolInfo)1158_storage)",
            "src": "../project:/contracts/EinsteinFarming.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage))",
            "src": "../project:/contracts/EinsteinFarming.sol:71"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../project:/contracts/EinsteinFarming.sol:72"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_uint256))",
            "src": "../project:/contracts/EinsteinFarming.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)1130,t_struct(PoolInfo)1158_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)1130": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)1158_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)1130"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)1130"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)1130,t_struct(UserInfo)1169_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)1169_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1130,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)1130,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa2e1c3acb6f5904eebea422d06e022fc7f1b63692c58cec5d9ede8378f284e8": {
      "address": "0xCAf7D1215Cba818018701Ff5164121C65F1ABA7a",
      "txHash": "0x3a18a41326708fe1052aaea20c71f2c4dee8d1d6fb06dd85781e17681130fca8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72483f9ce2dfcefb61d79089533326b6beac0e5f425feb222e3d080cdd0ca43e": {
      "address": "0xCD17BC96813BaFD983c7Aee2f7FA39712Ca2112C",
      "txHash": "0x20450b3e5571d0916adb46a5d6ed9dd45631246a60f620bf9a669cd69386d9d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bfc5ffe7722ea0caf907044c99c28f8ed8a72a34be38a4fc4599346c709968ce": {
      "address": "0x54cEeB2c6e2B1CBd5eA1dE4cA5FEA213D8Ac48C9",
      "txHash": "0x7b7a1bbf7828e73c1ac80967a348faf85a018165d6dd5aa2a197ab678f15bb29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ecfa477a6bcd4a8cabf8003b41a33491d2ec14d390dd8582c7695a3d378799d": {
      "address": "0xE10Bb81932Bb01dbE2616D63e3a0a212EDDF0028",
      "txHash": "0xaa8fc1decd5b4d7cbc50e910f1c852a8927dc0692b2f04f086067421b708ae8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b172ff79e70545eb07293d28fbad636db2ba92fa5fa6d4e75edeef01415c55bd": {
      "address": "0x69a0a4a560973b83eB0Ba5484B9b6748855B9314",
      "txHash": "0xa048a0d7f98082a6fbe275b18464240cf5cb6c3ec16f56618d99a46c62598ad1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed606336aa161c53152b664ee1f788612fd9c8639492d06442736a90801f6164": {
      "address": "0xF717a8b21149094f868292aD861054F291Abb6d2",
      "txHash": "0x5ec731b7eae3711d002ff752c2f517861e214d57c2024e28c6b2544453ad61a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:66"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:77"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)459,t_struct(PoolInfo)487_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)459": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)487_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)459"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)459,t_struct(UserInfo)498_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)498_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)459,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)459,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4a9aa27fe376beeef6b66d0bf4e5691036fc6f829b2878f1416c6d9be241a7ab": {
      "address": "0xFa6C1bF0Ba1C50Ff3893c80f0b812B7d4156DA37",
      "txHash": "0x3ff78cf818090d263392ef9fb56ba996cdd6f1024a3a52dc825a36d8753a89a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)2876,t_struct(PoolInfo)2904_storage)",
            "src": "../project:/contracts/backup.sol:69"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)2876,t_struct(UserInfo)2915_storage))",
            "src": "../project:/contracts/backup.sol:71"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../project:/contracts/backup.sol:72"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)2876,t_uint256))",
            "src": "../project:/contracts/backup.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)2876,t_struct(PoolInfo)2904_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)2876": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)2904_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)2876"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)2876"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)2876,t_struct(UserInfo)2915_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)2876,t_struct(UserInfo)2915_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)2915_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)2876,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)2876,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "73c7286940ffc150a3f1429f5a9e0ac6ac9135b5ac63e9d742792466d6b6d68e": {
      "address": "0x6548e2fa6A7D17f78ec69f21340E8d5D0DC404E9",
      "txHash": "0x7248687367fa98f11b72c90260b254432e6e8c481b472172011fdb82142b55e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)1717,t_struct(PoolInfo)1748_storage)",
            "src": "../project:/contracts/EinsteinFarming.sol:71"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_struct(UserInfo)1759_storage))",
            "src": "../project:/contracts/EinsteinFarming.sol:73"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../project:/contracts/EinsteinFarming.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_uint256))",
            "src": "../project:/contracts/EinsteinFarming.sol:75"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/EinsteinFarming.sol:78"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/EinsteinFarming.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_uint256))",
            "src": "../project:/contracts/EinsteinFarming.sol:80"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_uint256))",
            "src": "../project:/contracts/EinsteinFarming.sol:81"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)1717,t_struct(PoolInfo)1748_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)1717": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)1748_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)1717"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)1717"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_struct(UserInfo)1759_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)1717,t_struct(UserInfo)1759_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)1759_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)1717,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1717,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)1717,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d25998da66667c4c34afcececb9e088b81b6970ec5415f3315ab2e0d036c5a8": {
      "address": "0x851625Cb902a42607cB3adc919aF0e8431B33557",
      "txHash": "0xce62e941583cced7069470924d598f2a09042b03ced3d4aa8cf5248ace1b243a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "EinsteinFarming",
            "label": "poolInfo",
            "type": "t_mapping(t_contract(IBEP20)1046,t_struct(PoolInfo)1077_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:70"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_struct(UserInfo)1088_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:74"
          },
          {
            "contract": "EinsteinFarming",
            "label": "timeBound",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:75"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userTimeBounds",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:76"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmedBalances",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:79"
          },
          {
            "contract": "EinsteinFarming",
            "label": "farmingTimestamps",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_array(t_uint256)dyn_storage))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:83"
          },
          {
            "contract": "EinsteinFarming",
            "label": "userFarmCount",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:86"
          },
          {
            "contract": "EinsteinFarming",
            "label": "claimedReward",
            "type": "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/ERC20.sol:92"
          }
        ],
        "types": {
          "t_mapping(t_contract(IBEP20)1046,t_struct(PoolInfo)1077_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.PoolInfo)"
          },
          "t_contract(IBEP20)1046": {
            "label": "contract IBEP20"
          },
          "t_struct(PoolInfo)1077_storage": {
            "label": "struct EinsteinFarming.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IBEP20)1046"
              },
              {
                "label": "rewardToken",
                "type": "t_contract(IBEP20)1046"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "rewardInterval",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "totalFarmedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_struct(UserInfo)1088_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => struct EinsteinFarming.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IBEP20)1046,t_struct(UserInfo)1088_storage)": {
            "label": "mapping(contract IBEP20 => struct EinsteinFarming.UserInfo)"
          },
          "t_struct(UserInfo)1088_storage": {
            "label": "struct EinsteinFarming.UserInfo",
            "members": [
              {
                "label": "farmedAmount",
                "type": "t_uint256"
              },
              {
                "label": "farmingStartTime",
                "type": "t_uint256"
              },
              {
                "label": "hasFarmed",
                "type": "t_bool"
              },
              {
                "label": "isFarming",
                "type": "t_bool"
              },
              {
                "label": "oldReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_uint256))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256))"
          },
          "t_mapping(t_contract(IBEP20)1046,t_uint256)": {
            "label": "mapping(contract IBEP20 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_contract(IBEP20)1046,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(contract IBEP20 => uint256[]))"
          },
          "t_mapping(t_contract(IBEP20)1046,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IBEP20 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
